# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pire.rpc.service.pirestore_pb2 as pirestore__pb2


class PireStoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Greet = channel.unary_unary(
                '/pirestore.PireStore/Greet',
                request_serializer=pirestore__pb2.GreetMsg.SerializeToString,
                response_deserializer=pirestore__pb2.GreetAck.FromString,
                )
        self.ISet = channel.unary_unary(
                '/pirestore.PireStore/ISet',
                request_serializer=pirestore__pb2.SetReq.SerializeToString,
                response_deserializer=pirestore__pb2.SetAck.FromString,
                )
        self.Set = channel.unary_unary(
                '/pirestore.PireStore/Set',
                request_serializer=pirestore__pb2.SetReq.SerializeToString,
                response_deserializer=pirestore__pb2.SetAck.FromString,
                )
        self.Get = channel.unary_unary(
                '/pirestore.PireStore/Get',
                request_serializer=pirestore__pb2.GetReq.SerializeToString,
                response_deserializer=pirestore__pb2.GetAck.FromString,
                )
        self.Val = channel.unary_unary(
                '/pirestore.PireStore/Val',
                request_serializer=pirestore__pb2.ValReq.SerializeToString,
                response_deserializer=pirestore__pb2.ValAck.FromString,
                )
        self.Rem = channel.unary_unary(
                '/pirestore.PireStore/Rem',
                request_serializer=pirestore__pb2.RemReq.SerializeToString,
                response_deserializer=pirestore__pb2.RemAck.FromString,
                )


class PireStoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Greet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ISet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Val(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PireStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Greet': grpc.unary_unary_rpc_method_handler(
                    servicer.Greet,
                    request_deserializer=pirestore__pb2.GreetMsg.FromString,
                    response_serializer=pirestore__pb2.GreetAck.SerializeToString,
            ),
            'ISet': grpc.unary_unary_rpc_method_handler(
                    servicer.ISet,
                    request_deserializer=pirestore__pb2.SetReq.FromString,
                    response_serializer=pirestore__pb2.SetAck.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=pirestore__pb2.SetReq.FromString,
                    response_serializer=pirestore__pb2.SetAck.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=pirestore__pb2.GetReq.FromString,
                    response_serializer=pirestore__pb2.GetAck.SerializeToString,
            ),
            'Val': grpc.unary_unary_rpc_method_handler(
                    servicer.Val,
                    request_deserializer=pirestore__pb2.ValReq.FromString,
                    response_serializer=pirestore__pb2.ValAck.SerializeToString,
            ),
            'Rem': grpc.unary_unary_rpc_method_handler(
                    servicer.Rem,
                    request_deserializer=pirestore__pb2.RemReq.FromString,
                    response_serializer=pirestore__pb2.RemAck.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pirestore.PireStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PireStore(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Greet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pirestore.PireStore/Greet',
            pirestore__pb2.GreetMsg.SerializeToString,
            pirestore__pb2.GreetAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ISet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pirestore.PireStore/ISet',
            pirestore__pb2.SetReq.SerializeToString,
            pirestore__pb2.SetAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pirestore.PireStore/Set',
            pirestore__pb2.SetReq.SerializeToString,
            pirestore__pb2.SetAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pirestore.PireStore/Get',
            pirestore__pb2.GetReq.SerializeToString,
            pirestore__pb2.GetAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Val(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pirestore.PireStore/Val',
            pirestore__pb2.ValReq.SerializeToString,
            pirestore__pb2.ValAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pirestore.PireStore/Rem',
            pirestore__pb2.RemReq.SerializeToString,
            pirestore__pb2.RemAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
